<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en"><generator uri="https://jekyllrb.com/" version="4.3.4">Jekyll</generator><link href="https://carlosejimenez.com/feed.xml" rel="self" type="application/atom+xml" /><link href="https://carlosejimenez.com/" rel="alternate" type="text/html" hreflang="en" /><updated>2025-01-21T19:01:14+00:00</updated><id>https://carlosejimenez.com/feed.xml</id><title type="html">blank</title><subtitle>Carlos E. Jimenez
</subtitle><entry><title type="html">Enabling pbcopy over SSH with iTerm2</title><link href="https://carlosejimenez.com/blog/2024/enabling-pbcopy-on-ssh/" rel="alternate" type="text/html" title="Enabling pbcopy over SSH with iTerm2" /><published>2024-11-30T00:00:00+00:00</published><updated>2024-11-30T00:00:00+00:00</updated><id>https://carlosejimenez.com/blog/2024/enabling-pbcopy-on-ssh</id><content type="html" xml:base="https://carlosejimenez.com/blog/2024/enabling-pbcopy-on-ssh/"><![CDATA[<p>When working in the command line, you may want to quickly copy command output or file contents to your clipboard, perhaps to share with someone or to paste somewhere directly. On macOS, the simplest approach is using the <code class="language-plaintext highlighter-rouge">pbcopy</code> command, which copies any piped input to your clipboard, similar to <code class="language-plaintext highlighter-rouge">xclip</code> on Linux.</p>

<p>However, <code class="language-plaintext highlighter-rouge">pbcopy</code> typically doesn’t work in remote SSH sessions. While there are various workarounds with different levels of complexity and thoroughness, I’ve found a straightforward solution for iTerm2 users that’s simpler than the alternatives discussed in <a href="https://stackoverflow.com/questions/1152362/how-to-send-data-to-local-clipboard-from-a-remote-ssh-session">this Stack Overflow thread</a>.</p>

<p>Here’s how to enable <code class="language-plaintext highlighter-rouge">pbcopy</code> over SSH:</p>

<ol>
  <li>
    <p>First, define this function on the remote server by adding it to your <code class="language-plaintext highlighter-rouge">~/.bashrc</code>:</p>

    <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code> pbcopy<span class="o">()</span> <span class="o">{</span>
     <span class="nv">input</span><span class="o">=</span><span class="si">$(</span><span class="nb">cat</span><span class="si">)</span>
     <span class="nv">encoded</span><span class="o">=</span><span class="si">$(</span><span class="nb">printf</span> <span class="s2">"%s"</span> <span class="s2">"</span><span class="nv">$input</span><span class="s2">"</span> | <span class="nb">base64</span> <span class="nt">-w</span> 0<span class="si">)</span>
     <span class="nb">printf</span> <span class="s2">"</span><span class="se">\0</span><span class="s2">33]52;c;%s</span><span class="se">\0</span><span class="s2">07"</span> <span class="s2">"</span><span class="nv">$encoded</span><span class="s2">"</span>
 <span class="o">}</span>
</code></pre></div>    </div>
  </li>
  <li>
    <p>In iTerm2 on your local machine, navigate to Settings &gt; General &gt; Selection and enable “Applications in terminal may access clipboard”. You can leave “Allow sending of clipboard contents?” set to “Always Ask” as it doesn’t affect this functionality.</p>
  </li>
  <li>
    <p>For tmux users, add this line to your <code class="language-plaintext highlighter-rouge">~/.tmux.conf</code> to ensure clipboard interaction works within tmux sessions:</p>
    <ul>
      <li><code class="language-plaintext highlighter-rouge">set -s set-clipboard on</code></li>
      <li>This setting allows <code class="language-plaintext highlighter-rouge">tmux</code> to interact with the system clipboard, ensuring that the <code class="language-plaintext highlighter-rouge">pbcopy</code> function works seamlessly within <code class="language-plaintext highlighter-rouge">tmux</code> sessions.</li>
    </ul>
  </li>
</ol>

<p>Note: This method is specific to macOS and iTerm2.</p>]]></content><author><name></name></author><category term="blog" /><summary type="html"><![CDATA[When working in the command line, you may want to quickly copy command output or file contents to your clipboard, perhaps to share with someone or to paste somewhere directly. On macOS, the simplest approach is using the pbcopy command, which copies any piped input to your clipboard, similar to xclip on Linux.]]></summary></entry></feed>